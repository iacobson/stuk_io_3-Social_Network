.timeline-badge = gravatar_tag activity.owner.email, size: 55, html: {class: "img-circle"}
.timeline-panel
  div id="post_nr_#{activity.trackable.id}"
    .timeline-heading
      .news
        // add last commenter in the header
        - if activity.trackable.comments.any?
          = fa_icon "comments", class: "text-muted pull-left fa-fw"
          = link_to activity.trackable.comments.last.user.username, user_path(activity.trackable.comments.last.user.username)
          |  commented on this post 
          = time_ago_in_words(activity.trackable.comments.last.updated_at)
          |  ago
          br
          //= raw(activity.trackable.comments.first.comment_content_html)
          
        - if activity.trackable.likes.any?
          = fa_icon "heart", class: "text-muted pull-left fa-fw"
          = link_to activity.trackable.likes.last.user.username, user_path(activity.trackable.likes.last.user.username)
          |  liked this post 
          = time_ago_in_words(activity.trackable.likes.last.updated_at)
          |  ago
          
      hr
      // adding icons to activities
      = fa_icon "pencil 2x", class: "text-muted pull-right fa-fw"

      h4.timeline-title = link_to activity.owner.username, user_path(activity.owner.username)
      p
        small 
          | posted this 
          = time_ago_in_words(activity.created_at)
          |  ago
    / wrapt content generated by auto_html in #media_content. will force class "img-responsive" through jQuery
    .timeline-body#media_content                  
      = raw(activity.trackable.content_html)
      .timeline-footer
        // columns for comment, like and share
        .col-xs-2.text-center
          = link_to post_path(activity.trackable) do
            = fa_icon "comment-o 3x", class: "text-center"
          br
          small
            // count_comments is defined in the post Model
            strong#counter_number = activity.trackable.count_comments
        .col-xs-2.text-center.likes = render 'likes/like', post: activity.trackable
        br
        br
        br
        
      .news.post_comments  
        - if activity.trackable.comments.any?
                                  
            - activity.trackable.comments.last(3).reverse.each do |comment|
              .post_comment
                small 
                  = link_to comment.user.username, user_path(comment.user.username)
                  | 's comment:
                .comment = raw(comment.comment_content_html)
                hr
        // not using the comment form in order to make it more slick
        
        = simple_form_for(@comment, remote: true) do |f|
          = f.error_notification
          = f.input :comment_content, required: true, label: false, placeholder: "comment here", input_html: {class: "form-control input_comment_content"}
          = f.hidden_field :post_id, value: activity.trackable.id
          = f.button :submit, "Comment", class: "btn btn-primary btn-xs"
